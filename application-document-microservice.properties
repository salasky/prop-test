server.port=0

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

logging.level.com.netflix.eureka=OFF
logging.level.com.netflix.discovery=OFF
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

spring.datasource.url= jdbc:postgresql://localhost:5432/microservice-document
spring.datasource.username= postgres
spring.datasource.password= admin
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
server.error.include-message = always
feign.circuitbreaker.enabled=true

#spring.cloud.stream.bindings.documentInputChannel.destination = document-micro
#spring.cloud.stream.bindings.documentInputChannel.group = document-group
#spring.cloud.stream.rabbit.bindings.documentInputChannel.consumer.auto-bind-dlq = true

#spring.cloud.function.definition=newDocumentActionProduce;***;*** -все produce и consumer
spring.cloud.function.definition=newDocumentConsume

#out-работает на выход и 0- отправляем первый параметр (Message<DocumentDTO>) параметров может быть много
spring.cloud.stream.bindings.newDocumentConsume-in-0.destination = document-dest
spring.cloud.stream.bindings.newDocumentConsume-in-0.group = document-dest

tempvar=10001
